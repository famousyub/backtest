
## Server Properties

# Server port
server.port= 8080

# SSL config
#  server.ssl.enabled=true
#  server.ssl.key-store= classpath:omniacom2.p12
#  server.ssl.key-store-password=omniacom2
#  server.ssl.key-store-type=PKCS12
#  server.ssl.key-alias=omniacom2

# Enable response compression
server.compression.enabled=true

# Enable HTTP/2 support, if the current environment supports it
server.http2.enabled=true

# The comma-separated list of mime types that should be compressed
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json

# Compress the response only if the response size is at least 1KB
server.compression.min-response-size=2048

# Make the application accessible on the given context path (http://localhost:8080/myapp)
#server.servlet.context-path=/app

## Resource Properties

# Maximum time the response should be cached (in seconds) 
spring.resources.cache.cachecontrol.max-age=120

# The cache must re-validate resources with the server. Any expired resources must not be used without re-validating.
spring.resources.cache.cachecontrol.must-revalidate=true

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.url= jdbc:mysql://sql302.epizy.com:3306/forticas?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC&zeroDateTimeBehavior=convertToNull&useLegacyDatetimeCode=false&maxAllowedPacket=6777216
#sqlXXX.epizy.com
#jdbc:mysql://localhost:3306/forticas?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC&zeroDateTimeBehavior=convertToNull&useLegacyDatetimeCode=false&maxAllowedPacket=6777216
#spring.datasource.username=epiz_32042044
#spring.datasource.password=BICQ6ORKOeK
#spring.datasource.db-name = epiz_32042044_forticas

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

## Hibernate Properties

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
#spring.jpa.hibernate.ddl-auto = update








spring.datasource.url=postgres://kclcwttqnifyoy:de84931dc005f0f73867e4268a0add3311375e4b7ab5ff2614f5a45e0ed98ab7@ec2-3-226-163-72.compute-1.amazonaws.com:5432/d7f4sts54l3a4t
#jdbc:postgresql://localhost:5432/forticas
spring.datasource.username=kclcwttqnifyoy
spring.datasource.password=de84931dc005f0f73867e4268a0add3311375e4b7ab5ff2614f5a45e0ed98ab7

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL81Dialect


## Hibernate Logging
logging.level.org.hibernate.SQL= DEBUG

# Initialize the datasource with available DDL and DML scripts
spring.datasource.initialization-mode=always

## Jackson Properties
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS= false
spring.jackson.time-zone= UTC

## JWT Properties
app.jwtSecret= JWTSuperSecretKey
app.jwtExpirationInMs = 604800000
app.name= ForticasApp


spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.


spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

max_allowed_packet=128M



## Thymeleaf Properties
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html


#file.upload-dir=/uploads


#file.upload-dir=/home/user/Bureau/sprprojects/Gestion-Restau-Back/src/main/Uploads

